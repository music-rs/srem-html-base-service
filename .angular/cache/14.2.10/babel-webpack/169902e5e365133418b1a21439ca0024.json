{"ast":null,"code":"import _classCallCheck from \"D:/Projects/music-rs/srem-html-base-service/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Projects/music-rs/srem-html-base-service/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/Projects/music-rs/srem-html-base-service/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Projects/music-rs/srem-html-base-service/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Subscriber } from './Subscriber';\nimport { Observable } from './Observable';\nimport { subscribeTo } from './util/subscribeTo';\nexport var SimpleInnerSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(SimpleInnerSubscriber, _Subscriber);\n\n  var _super = _createSuper(SimpleInnerSubscriber);\n\n  function SimpleInnerSubscriber(parent) {\n    var _this;\n\n    _classCallCheck(this, SimpleInnerSubscriber);\n\n    _this = _super.call(this);\n    _this.parent = parent;\n    return _this;\n  }\n\n  _createClass(SimpleInnerSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      this.parent.notifyNext(value);\n    }\n  }, {\n    key: \"_error\",\n    value: function _error(error) {\n      this.parent.notifyError(error);\n      this.unsubscribe();\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.parent.notifyComplete();\n      this.unsubscribe();\n    }\n  }]);\n\n  return SimpleInnerSubscriber;\n}(Subscriber);\nexport var ComplexInnerSubscriber = /*#__PURE__*/function (_Subscriber2) {\n  _inherits(ComplexInnerSubscriber, _Subscriber2);\n\n  var _super2 = _createSuper(ComplexInnerSubscriber);\n\n  function ComplexInnerSubscriber(parent, outerValue, outerIndex) {\n    var _this2;\n\n    _classCallCheck(this, ComplexInnerSubscriber);\n\n    _this2 = _super2.call(this);\n    _this2.parent = parent;\n    _this2.outerValue = outerValue;\n    _this2.outerIndex = outerIndex;\n    return _this2;\n  }\n\n  _createClass(ComplexInnerSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      this.parent.notifyNext(this.outerValue, value, this.outerIndex, this);\n    }\n  }, {\n    key: \"_error\",\n    value: function _error(error) {\n      this.parent.notifyError(error);\n      this.unsubscribe();\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.parent.notifyComplete(this);\n      this.unsubscribe();\n    }\n  }]);\n\n  return ComplexInnerSubscriber;\n}(Subscriber);\nexport var SimpleOuterSubscriber = /*#__PURE__*/function (_Subscriber3) {\n  _inherits(SimpleOuterSubscriber, _Subscriber3);\n\n  var _super3 = _createSuper(SimpleOuterSubscriber);\n\n  function SimpleOuterSubscriber() {\n    _classCallCheck(this, SimpleOuterSubscriber);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(SimpleOuterSubscriber, [{\n    key: \"notifyNext\",\n    value: function notifyNext(innerValue) {\n      this.destination.next(innerValue);\n    }\n  }, {\n    key: \"notifyError\",\n    value: function notifyError(err) {\n      this.destination.error(err);\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      this.destination.complete();\n    }\n  }]);\n\n  return SimpleOuterSubscriber;\n}(Subscriber);\nexport var ComplexOuterSubscriber = /*#__PURE__*/function (_Subscriber4) {\n  _inherits(ComplexOuterSubscriber, _Subscriber4);\n\n  var _super4 = _createSuper(ComplexOuterSubscriber);\n\n  function ComplexOuterSubscriber() {\n    _classCallCheck(this, ComplexOuterSubscriber);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(ComplexOuterSubscriber, [{\n    key: \"notifyNext\",\n    value: function notifyNext(_outerValue, innerValue, _outerIndex, _innerSub) {\n      this.destination.next(innerValue);\n    }\n  }, {\n    key: \"notifyError\",\n    value: function notifyError(error) {\n      this.destination.error(error);\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete(_innerSub) {\n      this.destination.complete();\n    }\n  }]);\n\n  return ComplexOuterSubscriber;\n}(Subscriber);\nexport function innerSubscribe(result, innerSubscriber) {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n\n  return subscribeTo(result)(innerSubscriber);\n} //# sourceMappingURL=innerSubscribe.js.map","map":null,"metadata":{},"sourceType":"module"}